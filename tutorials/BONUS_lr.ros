/*

Acest program implementeazÄƒ de la zero un model de regresie liniarÄƒ Ã®n ROScript.  
Se foloseÈ™te algoritmul Gradient Descent pentru antrenarea modelului, iar la final sunt calculate
mai multe metrici de evaluare: MSE, MAE È™i RÂ².

--------------------------------------------------
ðŸ“Œ FUNCÈšII DE EVALUARE A ERORILOR
--------------------------------------------------
*/

// âœ… CalculeazÄƒ Mean Squared Error (MSE)
functie eroare_mse(var y_true, var y_pred) {
    var nn = lungime(y_true);
    var suma = 0.0;
    pentru (var i = 0; i < nn; i = i + 1) {
        var diff = y_pred[i] - y_true[i];
        suma = suma + diff * diff;
    }
    returneaza suma / nn;
}

// âœ… CalculeazÄƒ RÂ² (coeficientul de determinare)
functie eroare_r_squared(var y_true, var y_pred) {
    var nn = lungime(y_true);
    var suma_res = 0.0;
    var suma_tot = 0.0;
    
    // ðŸ“Œ CalculÄƒm media valorilor reale
    var medie = 0.0;
    pentru (var i = 0; i < nn; i = i + 1) {
        medie = medie + y_true[i];
    }
    medie = medie / nn;
    
    // ðŸ“Œ CalculÄƒm variaÈ›ia rezidualÄƒ È™i totalÄƒ
    pentru (var i = 0; i < nn; i = i + 1) {
        var diff_res = y_true[i] - y_pred[i];
        suma_res = suma_res + diff_res * diff_res;
        
        var diff_tot = y_true[i] - medie;
        suma_tot = suma_tot + diff_tot * diff_tot;
    }
    returneaza 1 - (suma_res / suma_tot);
}

// âœ… CalculeazÄƒ Mean Absolute Error (MAE)
functie eroare_mae(var y_true, var y_pred) {
    var nn = lungime(y_true);
    var suma = 0.0;
    pentru (var i = 0; i < nn; i = i + 1) {
        var diff = y_pred[i] - y_true[i];
        suma = suma + abs(diff);
    }
    returneaza suma / nn;
}

//--------------------------------------------------
//ðŸ“Œ FUNCÈšIE PENTRU PREZICERE
//--------------------------------------------------

// âœ… CalculeazÄƒ predicÈ›iile unui model liniar dat (w = coeficienÈ›i, b = bias)
functie prezice(var x, var w, var b) {
    var m = lungime(x);   // numÄƒr de exemple
    var n = lungime(w);   // numÄƒr de caracteristici

    var rezultate = [];

    pentru (var i = 0; i < m; i = i + 1) {
        var y_pred = 0.0;
        pentru (var j = 0; j < n; j = j + 1) {
            y_pred = y_pred + w[j] * x[i,j];
        }
        y_pred = y_pred + b;
        adauga(rezultate, y_pred);
    }

    returneaza rezultate;
}

//--------------------------------------------------
//ðŸ“Œ REGRESIE LINIARÄ‚ CU GRADIENT DESCENT
//--------------------------------------------------

// âœ… AntreneazÄƒ un model de regresie liniarÄƒ pe baza datelor (x, y)
functie regresie_liniara(var x, var y, var invatare, var epoci) {
    var n = lungime(x[0]); // numÄƒr de caracteristici
    var m = lungime(x);    // numÄƒr de exemple
    
    // IniÈ›ializÄƒm coeficienÈ›ii w È™i bias b cu 0
    var w = [];
    pentru (var i = 0; i < n; i = i + 1) {
        adauga(w, 0.0);
    }
    var b = 0.0;

    // ðŸ“Œ Gradient Descent
    pentru (var ep = 0; ep < epoci; ep++) {
        var dw = [];
        pentru (var i = 0; i < n; i = i + 1) {
            adauga(dw, 0.0);
        }
        var db = 0.0;

        // CalculÄƒm predicÈ›iile È™i gradientul pentru fiecare exemplu
        pentru (var i = 0; i < m; i = i + 1) {
            var y_pred = 0.0;
            pentru (var j = 0; j < n; j = j + 1) {
                y_pred = y_pred + w[j] * x[i,j];
            }
            y_pred = y_pred + b;

            var eroare = y_pred - y[i];
            pentru (var j = 0; j < n; j = j + 1) {
                dw[j] = dw[j] + eroare * x[i,j];
            }
            db = db + eroare;
        }

        // ðŸ“Œ ActualizÄƒm parametrii modelului
        pentru (var j = 0; j < n; j = j + 1) {
            w[j] = w[j] - invatare * dw[j] / m;
        }
        b = b - invatare * db / m;

        // âœ… La fiecare 100 epoci putem calcula pierderea (opÈ›ional)
        daca (ep % 100 == 0) {
            var y_pred_tot = prezice(x, w, b);
            var loss = eroare_mse(y, y_pred_tot);
            afiseaza("Epoch ", ep, " Loss: ", loss, "\n");
        }
    }

    returneaza [w,b];
}

//--------------------------------------------------
//ðŸ“Œ DATE DE ANTRENARE È˜I TESTARE
//--------------------------------------------------

/*
x â†’ matrice de caracteristici
y â†’ valori reale generate dupÄƒ o ecuaÈ›ie liniarÄƒ
x_nou â†’ date pentru testarea modelului
calc_val_corecte â†’ funcÈ›ie pentru a calcula valorile corecte ale testului
*/

functie calc_val_corecte(var x_test){
    var val_corecte=[];
    pentru (var i=0;i<lungime(x_test);i++){
        adauga(val_corecte,3*x_test[i,0]-2*x_test[i,1]+0.5*x_test[i,2]+x_test[i,3]-x_test[i,4]+7);
    }
    returneaza val_corecte;
}

var x = [
    [1, 2, 3, 4, 5],
    [2, 1, 0, 3, 2],
    [0, 0, 0, 0, 0],
    [4, 3, 2, 1, 0],
    [5, 5, 5, 5, 5],
    [1, 1, 1, 1, 1],
    [3, 6, 9, 12, 15],
    [7, 8, 9, 6, 5],
    [5, 3, 1, 0, -1],
    [-2, -1, 0, 1, 2],
    [10, 9, 8, 7, 6],
    [6, 5, 4, 3, 2],
    [1, 0, 1, 0, 1],
    [2, 2, 2, 2, 2],
    [3, 1, 4, 1, 5],
    [0, 1, 2, 3, 4],
    [9, 8, 7, 6, 5],
    [4, 2, 0, -2, -4],
    [-1, -2, -3, -4, -5],
    [2, 4, 6, 8, 10]
];

var y = [
    3*1 - 2*2 + 0.5*3 + 4 - 5 + 7,    // 5.5
    3*2 - 2*1 + 0.5*0 + 3 - 2 + 7,    // 10
    3*0 - 2*0 + 0.5*0 + 0 - 0 + 7,    // 7
    3*4 - 2*3 + 0.5*2 + 1 - 0 + 7,    // 17
    3*5 - 2*5 + 0.5*5 + 5 - 5 + 7,    // 17.5
    3*1 - 2*1 + 0.5*1 + 1 - 1 + 7,    // 8.5
    3*3 - 2*6 + 0.5*9 + 12 - 15 + 7,  // 4.5
    3*7 - 2*8 + 0.5*9 + 6 - 5 + 7,    // 19.5
    3*5 - 2*3 + 0.5*1 + 0 - (-1) + 7, // 19
    3*(-2) - 2*(-1) + 0.5*0 + 1 - 2 + 7, // 2
    3*10 - 2*9 + 0.5*8 + 7 - 6 + 7,   // 31
    3*6 - 2*5 + 0.5*4 + 3 - 2 + 7,    // 23
    3*1 - 2*0 + 0.5*1 + 0 - 1 + 7,    // 9.5
    3*2 - 2*2 + 0.5*2 + 2 - 2 + 7,    // 11
    3*3 - 2*1 + 0.5*4 + 1 - 5 + 7,    // 13
    3*0 - 2*1 + 0.5*2 + 3 - 4 + 7,    // 6
    3*9 - 2*8 + 0.5*7 + 6 - 5 + 7,    // 34.5
    3*4 - 2*2 + 0.5*0 + (-2) - (-4) + 7, // 17
    3*(-1) - 2*(-2) + 0.5*(-3) + (-4) - (-5) + 7, // 5.5
    3*2 - 2*4 + 0.5*6 + 8 - 10 + 7     // 7
];

var x_nou = [
    [2, 2, 2, 2, 2],
    [1, 3, 5, 7, 9],
    [0, 1, 0, 1, 0],
    [5, 4, 3, 2, 1],
    [3, 3, 3, 3, 0],
    [6, 5, 4, 3, 2],
    [7, 6, 5, 4, 3],
    [-1, 0, 1, 2, 3],
    [2, 3, 4, 5, 6],
    [1, 0, 2, 4, 6],
    [3, 5, 1, 0, -2],
    [4, 1, 2, 1, 4],
    [3, 2, 1, 0, -1],
    [-2, -2, -2, -2, -2],
    [5, 3, 1, 2, 3],
    [6, 7, 8, 9, 10],
    [3, 3, 0, 0, 0],
    [0, 0, 1, 2, 3],
    [4, 5, 6, 7, 8],
    [1, 2, 1, 2, 1]
];

//--------------------------------------------------
//ðŸ“Œ ANTRENARE + PREDICÈšII + EVALUARE
//--------------------------------------------------

var model = regresie_liniara(x, y, 0.01, 1000);   // âœ… AntrenÄƒm modelul

var rezultate = prezice(x_nou, model[0], model[1]); // âœ… Facem predicÈ›ii pe date noi

var valori_corecte = calc_val_corecte(x_nou);       // âœ… CalculÄƒm valorile reale

// âœ… CalculÄƒm erorile
var _eroare_mse = eroare_mse(valori_corecte,rezultate);
var _eroare_mae = eroare_mae(valori_corecte,rezultate);
var _eroare_r_squared = eroare_r_squared(valori_corecte,rezultate);

// âœ… AfiÈ™Äƒm rezultatele
afiseaza(rezultate,"\n");
afiseaza("Eroare MSE: ",_eroare_mse,"\n");
afiseaza("Eroare RMSE: ",radp(_eroare_mse),"\n");
afiseaza("Eroare MAE: ",_eroare_mae,"\n");
afiseaza("Eroare R squared: ",_eroare_r_squared,"\n");